<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="04a487ab-88aa-426d-881e-d30fe8cc2ac3" name="Changes" comment="Added migrations&#10;Added tests&#10;Started testing models (get weird error)">
      <change beforePath="$PROJECT_DIR$/database.json" beforeDir="false" afterPath="$PROJECT_DIR$/database.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/tests/users_handler_spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/tests/users_handler_spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/models/tests/user_spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/tests/user_spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/models/users.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/users.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "NTRCodes"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/NTRCodes/nd0067-c2-creating-an-api-with-postgresql-and-express-project-starter.git",
    "accountId": "3237f307-5712-4088-8c3c-ee3c0b887ab5"
  }
}]]></component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2kFaVAsBBnwkZ3FRr8yIbXccn7L" />
  <component name="ProjectViewState">
    <option name="compactDirectories" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.postgres: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "javascript.nodejs.core.library.configured.version": "20.14.0",
    "javascript.nodejs.core.library.typings.version": "20.14.14",
    "last_opened_file_path": "//wsl.localhost/Ubuntu-22.04/home/nross/js_projects/udacity/cd0292-building-a-server-project-starter",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_interpreter_path": "wsl://Ubuntu-22.04@/home/nross/.nvm/versions/node/v20.14.0/bin/node",
    "nodejs_package_manager_path": "yarn",
    "npm.test.executor": "Run",
    "npm.watch.executor": "Run",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.fileTypes",
    "ts.external.directory.path": "\\\\wsl.localhost\\Ubuntu-22.04\\home\\nross\\js_projects\\udacity\\nd0067-c2-creating-an-api-with-postgresql-and-express-project-starter\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql_aurora_aws",
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl.localhost\Ubuntu-22.04\home\nross\js_projects\udacity\nd0067-c2-creating-an-api-with-postgresql-and-express-project-starter\spec" />
      <recent name="\\wsl.localhost\Ubuntu-22.04\home\nross\js_projects\udacity\nd0067-c2-creating-an-api-with-postgresql-and-express-project-starter\src" />
    </key>
  </component>
  <component name="RunManager" selected="npm.test">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <package-manager value="npm" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="watch" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="watch" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.postgres: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="npm.test" />
      <item itemvalue="npm.watch" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="npm.watch" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.postgres: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-WS-241.18034.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="04a487ab-88aa-426d-881e-d30fe8cc2ac3" name="Changes" comment="" />
      <created>1722881799214</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1722881799214</updated>
      <workItem from="1722881800227" duration="450000" />
      <workItem from="1722882261094" duration="3788000" />
      <workItem from="1722889357873" duration="6966000" />
      <workItem from="1722897549979" duration="12062000" />
      <workItem from="1722955932237" duration="5652000" />
      <workItem from="1722962110806" duration="471000" />
      <workItem from="1722963035863" duration="20188000" />
      <workItem from="1723041519597" duration="25390000" />
      <workItem from="1723075762212" duration="5706000" />
    </task>
    <task id="LOCAL-00001" summary="Added migrations&#10;Added tests&#10;Started testing models (get weird error)">
      <option name="closed" value="true" />
      <created>1723075436261</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1723075436261</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/src/database.js" />
        <option value="$PROJECT_DIR$/src/server.js" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added migrations&#10;Added tests&#10;Started testing models (get weird error)" />
    <option name="LAST_COMMIT_MESSAGE" value="Added migrations&#10;Added tests&#10;Started testing models (get weird error)" />
  </component>
</project>